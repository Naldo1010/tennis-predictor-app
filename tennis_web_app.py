
import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
from io import BytesIO

# Mock player statistics
mock_stats = {
Â Â Â  "Stewart Aronson": {
Â Â Â Â Â Â Â  "Ranking": 120,
Â Â Â Â Â Â Â  "Recent Win Rate": 0.75,
Â Â Â Â Â Â Â  "Surface Win Rate": 0.70,
Â Â Â Â Â Â Â  "Head-to-Head Wins": 3,
Â Â Â Â Â Â Â  "First Serve Win %": 0.68,
Â Â Â Â Â Â Â  "Break Point Conversion %": 0.55
Â Â Â  },
Â Â Â  "Davis Taylor": {
Â Â Â Â Â Â Â  "Ranking": 180,
Â Â Â Â Â Â Â  "Recent Win Rate": 0.55,
Â Â Â Â Â Â Â  "Surface Win Rate": 0.50,
Â Â Â Â Â Â Â  "Head-to-Head Wins": 1,
Â Â Â Â Â Â Â  "First Serve Win %": 0.60,
Â Â Â Â Â Â Â  "Break Point Conversion %": 0.45
Â Â Â  }
}

# Logistic regression model coefficients (mock)
coefficients = {
Â Â Â  "Ranking": -0.01,
Â Â Â  "Recent Win Rate": 2.0,
Â Â Â  "Surface Win Rate": 1.5,
Â Â Â  "Head-to-Head Wins": 0.5,
Â Â Â  "First Serve Win %": 1.2,
Â Â Â  "Break Point Conversion %": 1.0
}
intercept = 0.2

# Streamlit UI
st.title("ðŸŽ¾ Tennis Match Predictor & Player Comparison")

players = list(mock_stats.keys())
player_a = st.selectbox("Select Player A", players, index=0)
player_b = st.selectbox("Select Player B", players, index=1)

if player_a == player_b:
Â Â Â  st.warning("Please select two different players.")
else:
Â Â Â  # Prepare comparison data
Â Â Â  stats = list(mock_stats[player_a].keys())
Â Â Â  data = {
Â Â Â Â Â Â Â  "Statistic": stats,
Â Â Â Â Â Â Â  player_a: [mock_stats[player_a][stat] for stat in stats],
Â Â Â Â Â Â Â  player_b: [mock_stats[player_b][stat] for stat in stats]
Â Â Â  }
Â Â Â  df = pd.DataFrame(data)

Â Â Â  # Display comparison table
Â Â Â  st.subheader("ðŸ“Š Player Comparison Table")
Â Â Â  st.dataframe(df.set_index("Statistic"))

Â Â Â  # Bar chart with tooltips
Â Â Â  st.subheader("ðŸ“ˆ Visual Comparison")
Â Â Â  df_melted = df.melt(id_vars="Statistic", var_name="Player", value_name="Value")
Â Â Â  fig = px.bar(df_melted, x="Statistic", y="Value", color="Player", barmode="group",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  hover_data=["Player", "Value"], height=400)
Â Â Â  st.plotly_chart(fig)

Â Â Â  # Prediction
Â Â Â  st.subheader("ðŸ”® Match Prediction")
Â Â Â  feature_diff = {
Â Â Â Â Â Â Â  stat: mock_stats[player_a][stat] - mock_stats[player_b][stat]
Â Â Â Â Â Â Â  for stat in stats
Â Â Â  }
Â Â Â  linear_sum = intercept + sum(feature_diff[stat] * coefficients[stat] for stat in stats)
Â Â Â  prob = 1 / (1 + np.exp(-linear_sum))
Â Â Â  predicted_winner = player_a if prob > 0.5 else player_b
Â Â Â  st.markdown(f"**Predicted Winner:** {predicted_winner}")
Â Â Â  st.markdown(f"**Win Probability for {player_a}:** {prob:.2%}")

Â Â Â  # Excel download
Â Â Â  st.subheader("ðŸ“¥ Download Comparison Data")
Â Â Â  excel_buffer = BytesIO()
Â Â Â  df.to_excel(excel_buffer, index=False, engine='openpyxl')
Â Â Â  st.download_button(
Â Â Â Â Â Â Â  label="Download as Excel",
Â Â Â Â Â Â Â  data=excel_buffer.getvalue(),
Â Â Â Â Â Â Â  file_name="player_comparison.xlsx",
Â Â Â Â Â Â Â  mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
Â Â Â  )

